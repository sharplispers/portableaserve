README --

NOTE: As of this writing, an up-to-date (very minor) fork of current
original AllegroServe has been made to work on SBCL and CCL, using the
new "zacl" portability layer. This new Allegroserve is taking over the
original "aserve" system name, and this (now-legacy) Portable
Allegroserve has had its system name changed to "paserve."

For SBCL and CCL, you are encourage to switch to the new "aserve," and
report any bugs or contributions to its repository as registered at the
[Quicklisp projects project](https://github.com/quicklisp/quicklisp-projects).

For Allegro CL, of course you can use the built-in AllegroServe.

For CLs other than SBCL, CCL, and Allegro CL, feel free to continue
using this Portable AllegroServe, but also consider contributing a
port of Zacl to your desired target platform, so you can be running an
up-to-date AllegroServe.

This is a short description of what you will find
in the subdirectories of this archive

 ./acl-compat/            Several ACL compatibility hacks
 ./aserve/                The AServe source
 ./debian/                Debian package files
 ./contrib/               Additional useful (?) code contributed by users
 ./logical-hostnames.lisp Some logical-pathname-translations needed by defsys
 ./README                 This file
 ./README.cmucl           Additional documentation for CMU Common Lisp
 ./INSTALL.lisp           Quick installation (deprecated)
 
 To run Portable AllegroServe, best install QuickLisp
 (http://quicklisp.org/) and evalute (ql:quickload :aserve).

 Loading the file aserve:example.cl and evaluating
 (aserve-example::start-server :port 2001) starts an AllegroServe
 server on http://localhost:2001 that shows off some of the things
 possible with AllegroServe.  Depending on the Lisp implementation, it
 might be necessary to give additional arguments :chunking nil and/or
 :listeners 0, since chunked transfer encoding and multi-threading are
 not supported everywhere.


Regards,
Jochen Schmidt

--
jsc@dataheaven.de
http://www.dataheaven.de

